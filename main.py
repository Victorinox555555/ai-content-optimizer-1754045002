"""
Main Flask application for Enterprise Revenue Intelligence Pro
Generated by QWEN-GPT-AGI autonomous SaaS factory
"""

import os
import json
import time
from flask import Flask, render_template, render_template_string, request, jsonify, redirect, url_for, session
from pathlib import Path

try:
    from auth import AuthManager, login_required
except ImportError:
    AuthManager = None
    def login_required(f): return f
try:
    from models import DatabaseManager
except ImportError:
    DatabaseManager = None
try:
    from stripe_payments import PaymentManager
except ImportError:
    PaymentManager = None

def _get_fallback_index():
    """Fallback billionaire-level index page if frontend_build not available"""
    return """
    <!DOCTYPE html>
    <html lang="en">
    <head>
        <meta charset="UTF-8">
        <meta name="viewport" content="width=device-width, initial-scale=1.0">
        <title>{app_name} - AI-Powered SaaS</title>
        <script src="https://cdn.tailwindcss.com"></script>
        <style>
            .gradient-bg {{ background: linear-gradient(135deg, #667eea 0%, #764ba2 100%); }}
            .glass {{ background: rgba(255, 255, 255, 0.1); backdrop-filter: blur(10px); border: 1px solid rgba(255, 255, 255, 0.2); }}
            .premium-card {{ background: linear-gradient(145deg, #ffffff 0%, #f8fafc 100%); box-shadow: 0 20px 40px rgba(0,0,0,0.1); }}
        </style>
    </head>
    <body class="gradient-bg min-h-screen">
        <nav class="glass p-4 mb-8">
            <div class="container mx-auto flex justify-between items-center">
                <h1 class="text-2xl font-bold text-white">{app_name}</h1>
                <div class="space-x-4">
                    <a href="/login" class="text-white hover:text-blue-200">Login</a>
                    <a href="/pricing" class="bg-white text-purple-600 px-4 py-2 rounded-full font-semibold hover:bg-opacity-90">Get Started</a>
                </div>
            </div>
        </nav>
        
        <div class="container mx-auto px-4 py-16">
            <div class="text-center text-white mb-16">
                <h1 class="text-6xl font-bold mb-6">{app_name}</h1>
                <p class="text-xl opacity-90 max-w-2xl mx-auto">{description}</p>
                <div class="mt-8">
                    <a href="/pricing" class="bg-white text-purple-600 px-8 py-4 rounded-full font-bold text-lg hover:bg-opacity-90 transition-all transform hover:scale-105 mr-4">Start Free Trial</a>
                    <a href="/dashboard" class="glass text-white px-8 py-4 rounded-full font-bold text-lg hover:bg-opacity-20 transition-all">View Demo</a>
                </div>
            </div>
            
            <div class="grid md:grid-cols-3 gap-8 max-w-6xl mx-auto mb-16">
                <div class="premium-card rounded-xl p-8 text-gray-800">
                    <div class="text-4xl mb-4">ðŸš€</div>
                    <h3 class="text-xl font-bold mb-4">AI-Powered Growth</h3>
                    <p class="opacity-80">Advanced artificial intelligence drives exponential business growth with real-time optimization.</p>
                </div>
                
                <div class="premium-card rounded-xl p-8 text-gray-800">
                    <div class="text-4xl mb-4">âš¡</div>
                    <h3 class="text-xl font-bold mb-4">Lightning Performance</h3>
                    <p class="opacity-80">Enterprise-grade infrastructure ensures maximum speed and reliability for your business.</p>
                </div>
                
                <div class="premium-card rounded-xl p-8 text-gray-800">
                    <div class="text-4xl mb-4">ðŸ”’</div>
                    <h3 class="text-xl font-bold mb-4">Bank-Level Security</h3>
                    <p class="opacity-80">Military-grade encryption and compliance standards protect your valuable data.</p>
                </div>
            </div>
            
            <div class="text-center text-white opacity-60">
                <p>Powered by Autonomous SaaS Factory â€¢ Enterprise Ready</p>
            </div>
        </div>
    </body>
    </html>
    """

def _get_fallback_dashboard():
    """Fallback billionaire-level dashboard if frontend_build not available"""
    return """
    <!DOCTYPE html>
    <html lang="en">
    <head>
        <meta charset="UTF-8">
        <meta name="viewport" content="width=device-width, initial-scale=1.0">
        <title>Dashboard - {app_name}</title>
        <script src="https://cdn.tailwindcss.com"></script>
        <style>
            .premium-card {{ background: linear-gradient(145deg, #ffffff 0%, #f8fafc 100%); box-shadow: 0 10px 30px rgba(0,0,0,0.1); }}
            .metric-card {{ background: linear-gradient(135deg, #667eea 0%, #764ba2 100%); }}
        </style>
    </head>
    <body class="bg-gray-50">
        <nav class="bg-white shadow-lg p-4 mb-8">
            <div class="container mx-auto flex justify-between items-center">
                <h1 class="text-2xl font-bold text-gray-800">{app_name} Dashboard</h1>
                <div class="space-x-4">
                    <a href="/pricing" class="text-blue-600 hover:text-blue-800">Upgrade</a>
                    <a href="/logout" class="bg-red-500 text-white px-4 py-2 rounded hover:bg-red-600">Logout</a>
                </div>
            </div>
        </nav>
        
        <div class="container mx-auto px-4 py-8">
            <div class="grid md:grid-cols-4 gap-6 mb-8">
                <div class="metric-card rounded-xl p-6 text-white">
                    <h3 class="text-lg font-semibold mb-2">Revenue</h3>
                    <p class="text-3xl font-bold">$12,450</p>
                    <p class="text-sm opacity-80">+23% this month</p>
                </div>
                <div class="metric-card rounded-xl p-6 text-white">
                    <h3 class="text-lg font-semibold mb-2">Users</h3>
                    <p class="text-3xl font-bold">1,247</p>
                    <p class="text-sm opacity-80">+15% this week</p>
                </div>
                <div class="metric-card rounded-xl p-6 text-white">
                    <h3 class="text-lg font-semibold mb-2">Conversion</h3>
                    <p class="text-3xl font-bold">3.2%</p>
                    <p class="text-sm opacity-80">+0.5% improvement</p>
                </div>
                <div class="metric-card rounded-xl p-6 text-white">
                    <h3 class="text-lg font-semibold mb-2">Growth</h3>
                    <p class="text-3xl font-bold">127%</p>
                    <p class="text-sm opacity-80">Year over year</p>
                </div>
            </div>
            
            <div class="grid md:grid-cols-2 lg:grid-cols-3 gap-6">
                <div class="premium-card p-6 rounded-lg">
                    <h3 class="text-lg font-semibold mb-4">Analytics Overview</h3>
                    <p class="text-gray-600 mb-4">View comprehensive performance metrics and insights</p>
                    <button class="bg-blue-500 text-white px-4 py-2 rounded hover:bg-blue-600">View Analytics</button>
                </div>
                <div class="premium-card p-6 rounded-lg">
                    <h3 class="text-lg font-semibold mb-4">Account Settings</h3>
                    <p class="text-gray-600 mb-4">Manage your account preferences and billing</p>
                    <button class="bg-green-500 text-white px-4 py-2 rounded hover:bg-green-600">Manage Account</button>
                </div>
                <div class="premium-card p-6 rounded-lg">
                    <h3 class="text-lg font-semibold mb-4">Premium Support</h3>
                    <p class="text-gray-600 mb-4">Get help from our expert support team</p>
                    <button class="bg-purple-500 text-white px-4 py-2 rounded hover:bg-purple-600">Contact Support</button>
                </div>
            </div>
        </div>
    </body>
    </html>
    """

def create_app():
    """Application factory pattern for better deployment compatibility"""
    app = Flask(__name__)
    app.config['SECRET_KEY'] = os.getenv('SECRET_KEY', 'dev-secret-key-change-in-production')
    
    if AuthManager:
        auth_manager = AuthManager()
        try:
            auth_manager.init_db()
        except: pass
    if DatabaseManager:
        db_manager = DatabaseManager()
        try:
            db_manager.init_database()
        except: pass
    if PaymentManager:
        payment_manager = PaymentManager()
        try:
            payment_manager.init_db()
        except: pass
    
    @app.route('/')
    def index():
        if Path('templates/index.html').exists():
            return render_template('index.html')
        else:
            return render_template_string(_get_fallback_index().format(app_name="Enterprise Revenue Intelligence Pro", description="Revolutionary AI-powered revenue intelligence platform that transforms enterprise sales processes using advanced machine learning, predictive analytics, and autonomous optimization strategies to maximize revenue growth for Fortune 500 companies."))
    
    @app.route('/dashboard')
    def dashboard():
        if Path('templates/dashboard.html').exists():
            return render_template('dashboard.html')
        else:
            return render_template_string(_get_fallback_dashboard().format(app_name="Enterprise Revenue Intelligence Pro"))
    
    
    @app.route('/login')
    def login_page():
        try:
            return render_template('login.html')
        except:
            return render_template_string(_get_fallback_login())
    
    @app.route('/signup')
    def signup_page():
        try:
            return render_template('signup.html')
        except:
            return render_template_string(_get_fallback_signup())
    
    @app.route('/api/login', methods=['POST'])
    def api_login():
        data = request.get_json() or {{}}
        if 'AuthManager' in globals() and auth_manager:
            result = auth_manager.authenticate_user(data.get('email', ''), data.get('password', ''))
            if result.get('success'):
                session['session_id'] = result.get('session_id')
                session['user_id'] = result.get('user_id')
            return jsonify(result)
        return jsonify({{'success': False, 'message': 'Authentication not available'}})
    
    @app.route('/api/signup', methods=['POST'])
    def api_signup():
        data = request.get_json() or {{}}
        if 'AuthManager' in globals() and auth_manager:
            result = auth_manager.create_user(data.get('email', ''), data.get('password', ''))
            return jsonify(result)
        return jsonify({{'success': False, 'message': 'Registration not available'}})
    
    @app.route('/logout')
    def logout():
        session.clear()
        return redirect(url_for('index'))
    
    def _get_fallback_login():
        return """
        <!DOCTYPE html>
        <html lang="en">
        <head>
            <meta charset="UTF-8">
            <meta name="viewport" content="width=device-width, initial-scale=1.0">
            <title>Login</title>
            <script src="https://cdn.tailwindcss.com"></script>
        </head>
        <body class="bg-gradient-to-br from-blue-500 to-purple-600 min-h-screen flex items-center justify-center">
            <div class="bg-white p-8 rounded-xl shadow-2xl w-full max-w-md">
                <h2 class="text-3xl font-bold text-center mb-6">Welcome Back</h2>
                <form id="loginForm">
                    <div class="mb-4">
                        <label class="block text-gray-700 text-sm font-bold mb-2">Email</label>
                        <input type="email" id="email" class="w-full px-3 py-2 border rounded-lg focus:outline-none focus:border-blue-500" required>
                    </div>
                    <div class="mb-6">
                        <label class="block text-gray-700 text-sm font-bold mb-2">Password</label>
                        <input type="password" id="password" class="w-full px-3 py-2 border rounded-lg focus:outline-none focus:border-blue-500" required>
                    </div>
                    <button type="submit" class="w-full bg-blue-500 text-white py-2 rounded-lg hover:bg-blue-600 transition-colors">Login</button>
                </form>
                <p class="text-center mt-4"><a href="/signup" class="text-blue-500 hover:underline">Don't have an account? Sign up</a></p>
            </div>
            <script>
                document.getElementById('loginForm').addEventListener('submit', async (e) => {{
                    e.preventDefault();
                    const email = document.getElementById('email').value;
                    const password = document.getElementById('password').value;
                    
                    try {{
                        const response = await fetch('/api/login', {{
                            method: 'POST',
                            headers: {{'Content-Type': 'application/json'}},
                            body: JSON.stringify({{email, password}})
                        }});
                        const result = await response.json();
                        
                        if (result.success) {{
                            window.location.href = '/dashboard';
                        }} else {{
                            alert(result.message || 'Login failed');
                        }}
                    }} catch (error) {{
                        alert('Login error: ' + error.message);
                    }}
                }});
            </script>
        </body>
        </html>
        """
    
    def _get_fallback_signup():
        return """
        <!DOCTYPE html>
        <html lang="en">
        <head>
            <meta charset="UTF-8">
            <meta name="viewport" content="width=device-width, initial-scale=1.0">
            <title>Sign Up</title>
            <script src="https://cdn.tailwindcss.com"></script>
        </head>
        <body class="bg-gradient-to-br from-green-500 to-blue-600 min-h-screen flex items-center justify-center">
            <div class="bg-white p-8 rounded-xl shadow-2xl w-full max-w-md">
                <h2 class="text-3xl font-bold text-center mb-6">Join Us Today</h2>
                <form id="signupForm">
                    <div class="mb-4">
                        <label class="block text-gray-700 text-sm font-bold mb-2">Email</label>
                        <input type="email" id="email" class="w-full px-3 py-2 border rounded-lg focus:outline-none focus:border-green-500" required>
                    </div>
                    <div class="mb-6">
                        <label class="block text-gray-700 text-sm font-bold mb-2">Password</label>
                        <input type="password" id="password" class="w-full px-3 py-2 border rounded-lg focus:outline-none focus:border-green-500" required>
                    </div>
                    <button type="submit" class="w-full bg-green-500 text-white py-2 rounded-lg hover:bg-green-600 transition-colors">Sign Up</button>
                </form>
                <p class="text-center mt-4"><a href="/login" class="text-green-500 hover:underline">Already have an account? Login</a></p>
            </div>
            <script>
                document.getElementById('signupForm').addEventListener('submit', async (e) => {{
                    e.preventDefault();
                    const email = document.getElementById('email').value;
                    const password = document.getElementById('password').value;
                    
                    try {{
                        const response = await fetch('/api/signup', {{
                            method: 'POST',
                            headers: {{'Content-Type': 'application/json'}},
                            body: JSON.stringify({{email, password}})
                        }});
                        const result = await response.json();
                        
                        if (result.success) {{
                            alert('Account created successfully! Please login.');
                            window.location.href = '/login';
                        }} else {{
                            alert(result.message || 'Signup failed');
                        }}
                    }} catch (error) {{
                        alert('Signup error: ' + error.message);
                    }}
                }});
            </script>
        </body>
        </html>
        """
    
    
    
    @app.route('/pricing')
    def pricing():
        try:
            return render_template('pricing.html')
        except:
            return render_template_string(_get_fallback_pricing())
    
    @app.route('/checkout')
    def checkout():
        try:
            return render_template('checkout.html')
        except:
            return render_template_string(_get_fallback_checkout())
    
    @app.route('/api/create-subscription', methods=['POST'])
    def create_subscription():
        if 'user_id' not in session:
            return jsonify({{'success': False, 'message': 'Authentication required'}}), 401
        
        data = request.get_json() or {{}}
        if 'PaymentManager' in globals() and payment_manager:
            user_id = session['user_id']
            result = payment_manager.create_subscription(user_id, data.get('plan', 'basic'))
            return jsonify(result)
        return jsonify({{'success': False, 'message': 'Payment processing not available'}})
    
    @app.route('/api/create-payment', methods=['POST'])
    def create_payment():
        if 'user_id' not in session:
            return jsonify({{'success': False, 'message': 'Authentication required'}}), 401
        
        data = request.get_json() or {{}}
        if 'PaymentManager' in globals() and payment_manager:
            user_id = session['user_id']
            result = payment_manager.create_payment_intent(user_id, data.get('amount', 2999))
            return jsonify(result)
        return jsonify({{'success': False, 'message': 'Payment processing not available'}})
    
    @app.route('/api/webhook', methods=['POST'])
    def stripe_webhook():
        if 'PaymentManager' in globals() and payment_manager:
            payload = request.get_data()
            sig_header = request.headers.get('Stripe-Signature')
            result = payment_manager.handle_webhook(payload, sig_header)
            return jsonify(result)
        return jsonify({{'success': True, 'message': 'Webhook received'}})
    
    def _get_fallback_pricing():
        return """
        <!DOCTYPE html>
        <html lang="en">
        <head>
            <meta charset="UTF-8">
            <meta name="viewport" content="width=device-width, initial-scale=1.0">
            <title>Pricing Plans</title>
            <script src="https://cdn.tailwindcss.com"></script>
        </head>
        <body class="bg-gray-50">
            <div class="container mx-auto px-4 py-16">
                <div class="text-center mb-16">
                    <h1 class="text-5xl font-bold mb-6">Choose Your Plan</h1>
                    <p class="text-xl text-gray-600">Select the perfect plan for your business needs</p>
                </div>
                
                <div class="grid md:grid-cols-3 gap-8 max-w-6xl mx-auto">
                    <div class="bg-white rounded-xl shadow-lg p-8 border">
                        <h3 class="text-2xl font-bold mb-4">Starter</h3>
                        <div class="text-4xl font-bold mb-6">$29<span class="text-lg text-gray-500">/month</span></div>
                        <ul class="space-y-3 mb-8">
                            <li class="flex items-center"><span class="text-green-500 mr-2">âœ“</span>Basic AI Features</li>
                            <li class="flex items-center"><span class="text-green-500 mr-2">âœ“</span>5,000 API Calls</li>
                            <li class="flex items-center"><span class="text-green-500 mr-2">âœ“</span>Email Support</li>
                        </ul>
                        <button class="w-full bg-blue-500 text-white py-3 rounded-lg hover:bg-blue-600 transition-colors">Get Started</button>
                    </div>
                    
                    <div class="bg-white rounded-xl shadow-lg p-8 border-2 border-purple-500 relative">
                        <div class="absolute -top-4 left-1/2 transform -translate-x-1/2 bg-purple-500 text-white px-4 py-1 rounded-full text-sm">Most Popular</div>
                        <h3 class="text-2xl font-bold mb-4">Professional</h3>
                        <div class="text-4xl font-bold mb-6">$99<span class="text-lg text-gray-500">/month</span></div>
                        <ul class="space-y-3 mb-8">
                            <li class="flex items-center"><span class="text-green-500 mr-2">âœ“</span>Advanced AI Features</li>
                            <li class="flex items-center"><span class="text-green-500 mr-2">âœ“</span>50,000 API Calls</li>
                            <li class="flex items-center"><span class="text-green-500 mr-2">âœ“</span>Priority Support</li>
                            <li class="flex items-center"><span class="text-green-500 mr-2">âœ“</span>Custom Integrations</li>
                        </ul>
                        <button class="w-full bg-purple-500 text-white py-3 rounded-lg hover:bg-purple-600 transition-colors">Upgrade Now</button>
                    </div>
                    
                    <div class="bg-white rounded-xl shadow-lg p-8 border">
                        <h3 class="text-2xl font-bold mb-4">Enterprise</h3>
                        <div class="text-4xl font-bold mb-6">$299<span class="text-lg text-gray-500">/month</span></div>
                        <ul class="space-y-3 mb-8">
                            <li class="flex items-center"><span class="text-green-500 mr-2">âœ“</span>Enterprise AI Suite</li>
                            <li class="flex items-center"><span class="text-green-500 mr-2">âœ“</span>Unlimited API Calls</li>
                            <li class="flex items-center"><span class="text-green-500 mr-2">âœ“</span>24/7 Phone Support</li>
                            <li class="flex items-center"><span class="text-green-500 mr-2">âœ“</span>Dedicated Account Manager</li>
                        </ul>
                        <button class="w-full bg-gray-800 text-white py-3 rounded-lg hover:bg-gray-900 transition-colors">Contact Sales</button>
                    </div>
                </div>
            </div>
        </body>
        </html>
        """
    
    def _get_fallback_checkout():
        return """
        <!DOCTYPE html>
        <html lang="en">
        <head>
            <meta charset="UTF-8">
            <meta name="viewport" content="width=device-width, initial-scale=1.0">
            <title>Checkout</title>
            <script src="https://cdn.tailwindcss.com"></script>
            <script src="https://js.stripe.com/v3/"></script>
        </head>
        <body class="bg-gray-50">
            <div class="container mx-auto px-4 py-16">
                <div class="max-w-2xl mx-auto bg-white rounded-xl shadow-lg p-8">
                    <h1 class="text-3xl font-bold mb-8">Complete Your Purchase</h1>
                    
                    <div class="grid md:grid-cols-2 gap-8">
                        <div>
                            <h3 class="text-xl font-semibold mb-4">Order Summary</h3>
                            <div class="bg-gray-50 p-4 rounded-lg">
                                <div class="flex justify-between mb-2">
                                    <span>Professional Plan</span>
                                    <span>$99.00</span>
                                </div>
                                <div class="flex justify-between mb-2">
                                    <span>Tax</span>
                                    <span>$9.90</span>
                                </div>
                                <hr class="my-2">
                                <div class="flex justify-between font-bold">
                                    <span>Total</span>
                                    <span>$108.90</span>
                                </div>
                            </div>
                        </div>
                        
                        <div>
                            <h3 class="text-xl font-semibold mb-4">Payment Details</h3>
                            <form id="payment-form">
                                <div class="mb-4">
                                    <label class="block text-gray-700 text-sm font-bold mb-2">Card Number</label>
                                    <input type="text" placeholder="1234 5678 9012 3456" class="w-full px-3 py-2 border rounded-lg focus:outline-none focus:border-blue-500">
                                </div>
                                <div class="grid grid-cols-2 gap-4 mb-4">
                                    <div>
                                        <label class="block text-gray-700 text-sm font-bold mb-2">Expiry</label>
                                        <input type="text" placeholder="MM/YY" class="w-full px-3 py-2 border rounded-lg focus:outline-none focus:border-blue-500">
                                    </div>
                                    <div>
                                        <label class="block text-gray-700 text-sm font-bold mb-2">CVC</label>
                                        <input type="text" placeholder="123" class="w-full px-3 py-2 border rounded-lg focus:outline-none focus:border-blue-500">
                                    </div>
                                </div>
                                <button type="submit" class="w-full bg-green-500 text-white py-3 rounded-lg hover:bg-green-600 transition-colors">Complete Purchase</button>
                            </form>
                        </div>
                    </div>
                </div>
            </div>
        </body>
        </html>
        """
    
    
    
    @app.route('/terms')
    def terms():
        try:
            with open('terms_of_service.md', 'r') as f:
                content = f.read()
            return render_template_string(_get_legal_template(), title="Terms of Service", content=content)
        except:
            return render_template_string(_get_fallback_terms())
    
    @app.route('/privacy')
    def privacy():
        try:
            with open('privacy_policy.md', 'r') as f:
                content = f.read()
            return render_template_string(_get_legal_template(), title="Privacy Policy", content=content)
        except:
            return render_template_string(_get_fallback_privacy())
    
    def _get_legal_template():
        return """
        <!DOCTYPE html>
        <html lang="en">
        <head>
            <meta charset="UTF-8">
            <meta name="viewport" content="width=device-width, initial-scale=1.0">
            <title>{{ title }}</title>
            <script src="https://cdn.tailwindcss.com"></script>
        </head>
        <body class="bg-gray-50">
            <div class="container mx-auto px-4 py-16">
                <div class="max-w-4xl mx-auto bg-white rounded-xl shadow-lg p-8">
                    <h1 class="text-4xl font-bold mb-8">{{ title }}</h1>
                    <div class="prose max-w-none">
                        <pre class="whitespace-pre-wrap">{{ content }}</pre>
                    </div>
                </div>
            </div>
        </body>
        </html>
        """
    
    def _get_fallback_terms():
        return """
        <!DOCTYPE html>
        <html lang="en">
        <head>
            <meta charset="UTF-8">
            <meta name="viewport" content="width=device-width, initial-scale=1.0">
            <title>Terms of Service</title>
            <script src="https://cdn.tailwindcss.com"></script>
        </head>
        <body class="bg-gray-50">
            <div class="container mx-auto px-4 py-16">
                <div class="max-w-4xl mx-auto bg-white rounded-xl shadow-lg p-8">
                    <h1 class="text-4xl font-bold mb-8">Terms of Service</h1>
                    <div class="prose max-w-none space-y-6">
                        <h2 class="text-2xl font-semibold">1. Acceptance of Terms</h2>
                        <p>By accessing and using this service, you accept and agree to be bound by the terms and provision of this agreement.</p>
                        
                        <h2 class="text-2xl font-semibold">2. Use License</h2>
                        <p>Permission is granted to temporarily download one copy of the materials on our website for personal, non-commercial transitory viewing only.</p>
                        
                        <h2 class="text-2xl font-semibold">3. Disclaimer</h2>
                        <p>The materials on our website are provided on an 'as is' basis. We make no warranties, expressed or implied, and hereby disclaim and negate all other warranties including without limitation, implied warranties or conditions of merchantability, fitness for a particular purpose, or non-infringement of intellectual property or other violation of rights.</p>
                        
                        <h2 class="text-2xl font-semibold">4. Limitations</h2>
                        <p>In no event shall our company or its suppliers be liable for any damages (including, without limitation, damages for loss of data or profit, or due to business interruption) arising out of the use or inability to use the materials on our website.</p>
                        
                        <h2 class="text-2xl font-semibold">5. Contact Information</h2>
                        <p>If you have any questions about these Terms of Service, please contact us at support@example.com</p>
                    </div>
                </div>
            </div>
        </body>
        </html>
        """
    
    def _get_fallback_privacy():
        return """
        <!DOCTYPE html>
        <html lang="en">
        <head>
            <meta charset="UTF-8">
            <meta name="viewport" content="width=device-width, initial-scale=1.0">
            <title>Privacy Policy</title>
            <script src="https://cdn.tailwindcss.com"></script>
        </head>
        <body class="bg-gray-50">
            <div class="container mx-auto px-4 py-16">
                <div class="max-w-4xl mx-auto bg-white rounded-xl shadow-lg p-8">
                    <h1 class="text-4xl font-bold mb-8">Privacy Policy</h1>
                    <div class="prose max-w-none space-y-6">
                        <h2 class="text-2xl font-semibold">1. Information We Collect</h2>
                        <p>We collect information you provide directly to us, such as when you create an account, make a purchase, or contact us for support.</p>
                        
                        <h2 class="text-2xl font-semibold">2. How We Use Your Information</h2>
                        <p>We use the information we collect to provide, maintain, and improve our services, process transactions, and communicate with you.</p>
                        
                        <h2 class="text-2xl font-semibold">3. Information Sharing</h2>
                        <p>We do not sell, trade, or otherwise transfer your personal information to third parties without your consent, except as described in this policy.</p>
                        
                        <h2 class="text-2xl font-semibold">4. Data Security</h2>
                        <p>We implement appropriate security measures to protect your personal information against unauthorized access, alteration, disclosure, or destruction.</p>
                        
                        <h2 class="text-2xl font-semibold">5. Contact Us</h2>
                        <p>If you have any questions about this Privacy Policy, please contact us at privacy@example.com</p>
                    </div>
                </div>
            </div>
        </body>
        </html>
        """
    
    
    @app.route('/api/health')
    def health_check():
        return jsonify({"status": "healthy", "service": "Enterprise Revenue Intelligence Pro", "timestamp": int(time.time())})
    
    @app.errorhandler(404)
    def page_not_found(e):
        return redirect(url_for('index'))
    
    @app.errorhandler(500)
    def server_error(e):
        return jsonify({"error": "Internal server error", "details": str(e)}, 500)
    
    return app

app = create_app()

if __name__ == '__main__':
    port = int(os.environ.get('PORT', 5000))
    app.run(host='0.0.0.0', port=port, debug=False)
